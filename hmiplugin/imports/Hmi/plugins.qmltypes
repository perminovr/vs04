import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Hmi 1.0 ../imports'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "UIMbRegister"
        prototype: "UITag"
        exports: ["Hmi/UIMbRegister 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "IR": 1,
                "HR": 2,
                "DI": 3,
                "Co": 4
            }
        }
        Property { name: "type"; type: "UIMbRegister::Type" }
        Property { name: "address"; type: "int" }
        Property { name: "length"; type: "int" }
        Property { name: "isReadable"; type: "bool" }
        Property { name: "isWritable"; type: "bool" }
    }
    Component {
        name: "UIModbus"
        prototype: "UIProtocol"
        Property { name: "address"; type: "int" }
        Method {
            name: "changeValue"
            Parameter { name: "reg"; type: "UIMbRegister"; isPointer: true }
            Parameter { name: "val"; type: "QVariant" }
        }
        Method { name: "restart" }
        Method {
            name: "setAddress"
            Parameter { type: "int" }
        }
        Method { name: "onPropetyChanged" }
        Method {
            name: "addReg"
            type: "UIMbRegister*"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "item"; type: "QObject"; isPointer: true }
            Parameter { name: "property"; type: "string" }
            Parameter { name: "address"; type: "int" }
            Parameter { name: "length"; type: "int" }
            Parameter { name: "byEvent"; type: "bool" }
        }
        Method {
            name: "addReg"
            type: "UIMbRegister*"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "item"; type: "QObject"; isPointer: true }
            Parameter { name: "property"; type: "string" }
            Parameter { name: "address"; type: "int" }
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "addReg"
            type: "UIMbRegister*"
            Parameter { name: "reg"; type: "UIMbRegister"; isPointer: true }
        }
    }
    Component {
        name: "UIModbusMaster"
        prototype: "UIModbus"
        Property { name: "timeOut"; type: "int" }
        Property { name: "attempts"; type: "int" }
        Property { name: "pollTo"; type: "int" }
        Property { name: "cycleTo"; type: "int" }
        Property { name: "startFromWrite"; type: "bool" }
        Method { name: "restart" }
        Method { name: "pause" }
        Method { name: "resume" }
        Method { name: "onPropetyChanged" }
    }
    Component {
        name: "UIModbusRtuMaster"
        prototype: "UIModbusMaster"
        exports: ["Hmi/UIModbusRtuMaster 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "port"; type: "UISerialPort"; isPointer: true }
        Method { name: "restart" }
        Method {
            name: "setPort"
            Parameter { name: "port"; type: "UISerialPort"; isPointer: true }
        }
    }
    Component {
        name: "UIModbusRtuSlave"
        prototype: "UIModbusSlave"
        exports: ["Hmi/UIModbusRtuSlave 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "port"; type: "UISerialPort"; isPointer: true }
        Method { name: "restart" }
        Method {
            name: "setPort"
            Parameter { name: "port"; type: "UISerialPort"; isPointer: true }
        }
    }
    Component {
        name: "UIModbusSlave"
        prototype: "UIModbus"
        Signal { name: "netAddrChanged" }
        Signal { name: "portChanged" }
        Method { name: "restart" }
        Method { name: "pause" }
        Method { name: "resume" }
        Method { name: "onPropetyChanged" }
    }
    Component {
        name: "UIModbusTcpMaster"
        prototype: "UIModbusMaster"
        exports: ["Hmi/UIModbusTcpMaster 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "ip"; type: "string" }
        Property { name: "port"; type: "int" }
        Property { name: "srcAddr"; type: "UINetAddress"; isPointer: true }
        Method { name: "restart" }
        Method {
            name: "setIp"
            Parameter { type: "string" }
        }
        Method {
            name: "setPort"
            Parameter { type: "int" }
        }
        Method {
            name: "setSrcAddr"
            Parameter { type: "UINetAddress"; isPointer: true }
        }
    }
    Component {
        name: "UIModbusTcpSlave"
        prototype: "UIModbusSlave"
        exports: ["Hmi/UIModbusTcpSlave 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "netAddr"; type: "UINetAddress"; isPointer: true }
        Property { name: "port"; type: "int" }
        Method { name: "restart" }
        Method {
            name: "setNetAddr"
            Parameter { type: "UINetAddress"; isPointer: true }
        }
        Method {
            name: "setPort"
            Parameter { type: "int" }
        }
    }
    Component {
        name: "UINetAddress"
        prototype: "QObject"
        exports: ["Hmi/UINetAddress 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Interface"
            values: {
                "Ethernet": 0,
                "Wifi": 1
            }
        }
        Property { name: "ip"; type: "string" }
        Property { name: "mask"; type: "string" }
        Property { name: "iface"; type: "UINetAddress::Interface" }
        Property { name: "isComplete"; type: "bool"; isReadonly: true }
        Signal {
            name: "completed"
            Parameter { type: "UINetAddress"; isPointer: true }
        }
        Method {
            name: "setIface"
            Parameter { type: "Interface" }
        }
    }
    Component {
        name: "UINetRoute"
        prototype: "UINetAddress"
        exports: ["Hmi/UINetRoute 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "gateway"; type: "string" }
        Property { name: "src"; type: "UINetAddress"; isPointer: true }
        Method {
            name: "setIface"
            Parameter { type: "Interface" }
        }
        Method {
            name: "setGateway"
            Parameter { type: "string" }
        }
        Method {
            name: "setSrc"
            Parameter { type: "UINetAddress"; isPointer: true }
        }
    }
    Component {
        name: "UIPanelCtl"
        prototype: "QObject"
        exports: ["Hmi/UIPanelCtl 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "InWork": 0,
                "NoConf": 1,
                "ErrConf": 2
            }
        }
        Enum {
            name: "SysLogType"
            values: {
                "Note": 0,
                "Warning": 1,
                "Error": 2,
                "Debug": 3
            }
        }
        Enum {
            name: "UiMode"
            values: {
                "QmlConfig": 0,
                "WebBrowser": 1
            }
        }
        Signal {
            name: "onSetReadOnlyOnceParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onSetCommonParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onSetEthernetParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onSetWifiParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onSetWifiFoundApList"
            Parameter { name: "list"; type: "QVariant" }
        }
        Signal {
            name: "onSetWifiSavedApList"
            Parameter { name: "list"; type: "QVariant" }
        }
        Signal {
            name: "onWriteToLogList"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "ts"; type: "qulonglong" }
            Parameter { name: "msg"; type: "string" }
        }
        Signal { name: "openUserConfigRequested" }
        Signal { name: "originResetRequested" }
        Signal {
            name: "onApplyCommonParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onApplyEthernetParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onApplyWifiParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onWifiSearchWindowVisibleChanged"
            Parameter { name: "visible"; type: "bool" }
        }
        Signal {
            name: "onApplyWifiApParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "onWriteLog"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "msg"; type: "string" }
        }
        Method { name: "netModeStatic"; type: "string" }
        Method { name: "netModeDhcp"; type: "string" }
        Method { name: "panelNetModeEthernet"; type: "string" }
        Method { name: "panelNetModeWifi"; type: "string" }
        Method { name: "panelNetModeEthWifi"; type: "string" }
        Method { name: "uiModeQmlConfig"; type: "string" }
        Method { name: "uiModeWebBrowser"; type: "string" }
        Method { name: "panelNameMaxLen"; type: "int" }
        Method { name: "openUserConfig" }
        Method { name: "originReset" }
        Method {
            name: "applyCommonParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "applyEthernetParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "applyWifiParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "applyWifiApParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "writeLog"
            Parameter { name: "type"; type: "SysLogType" }
            Parameter { name: "msg"; type: "string" }
        }
        Method {
            name: "wifiSearchWindowVisibleChanged"
            Parameter { name: "visible"; type: "bool" }
        }
    }
    Component {
        name: "UIProtocol"
        prototype: "QObject"
        Property { name: "connected"; type: "int"; isReadonly: true }
        Property { name: "isComplete"; type: "bool"; isReadonly: true }
        Property { name: "isStarted"; type: "bool"; isReadonly: true }
        Signal {
            name: "completed"
            Parameter { type: "UIProtocol"; isPointer: true }
        }
        Signal { name: "started" }
        Method { name: "restart" }
        Method { name: "pause" }
        Method { name: "resume" }
        Method { name: "start" }
        Method { name: "onPropetyChanged" }
    }
    Component {
        name: "UISerialPort"
        prototype: "QObject"
        exports: ["Hmi/UISerialPort 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "dev"; type: "string" }
        Property { name: "baudRate"; type: "int" }
        Property { name: "parity"; type: "int" }
        Property { name: "dataBits"; type: "int" }
        Property { name: "stopBits"; type: "int" }
        Property { name: "isComplete"; type: "bool"; isReadonly: true }
        Signal {
            name: "completed"
            Parameter { type: "UISerialPort"; isPointer: true }
        }
    }
    Component {
        name: "UITag"
        prototype: "QObject"
        Property { name: "item"; type: "QObject"; isPointer: true }
        Property { name: "property"; type: "string" }
        Property { name: "byEvent"; type: "bool" }
        Property { name: "isComplete"; type: "bool"; isReadonly: true }
        Signal {
            name: "itemChanged"
            Parameter { type: "QObject"; isPointer: true }
        }
        Signal {
            name: "propertyChanged"
            Parameter { type: "QString&" }
        }
        Signal {
            name: "byEventChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "completed"
            Parameter { type: "UITag"; isPointer: true }
        }
        Method {
            name: "setItem"
            Parameter { type: "QObject"; isPointer: true }
        }
        Method {
            name: "setProperty"
            Parameter { type: "string" }
        }
        Method {
            name: "setByEvent"
            Parameter { type: "bool" }
        }
    }
    Component {
        name: "UIUserCtl"
        prototype: "QObject"
        exports: ["Hmi/UIUserCtl 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal { name: "openMenuRequested" }
        Method { name: "openMenu" }
    }
}
